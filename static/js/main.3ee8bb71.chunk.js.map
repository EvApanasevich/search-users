{"version":3,"sources":["api/users-api.ts","redux/users-reducer.ts","components/modal/Modal.tsx","components/user/User.tsx","components/search/Search.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx"],"names":["instance","axios","create","baseURL","withCredentials","usersApi","get","SET_USERS","REMOVE_USER","initialState","users","setUsers","type","payload","getUsers","dispatch","a","res","data","Modal","props","active","setActive","address","company","className","onClick","e","stopPropagation","street","suite","city","zipcode","name","bs","catchPhrase","User","user","arrSearchName","arrSearchUsername","arrSearchEmail","setInputText","setSearchUsers","useState","modalActive","setModalActive","useDispatch","startName","searchNameSymbols","endName","slice","username","startUsername","searchUsernameSymbols","endUsername","userEmail","email","startEmail","searchEmailSymbols","endEmail","undefined","userId","id","Search","setNotFound","inputText","arrUsers","placeholder","value","onChange","currentTarget","map","result","regexp","RegExp","isName","isUsername","isEmail","exec","push","index","length","App","useSelector","state","searchUsers","notFound","useEffect","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","filter","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ee8bb71.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {UserType} from \"../redux/users-reducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers() {\r\n        return instance.get<Array<UserType>>('users')\r\n    }\r\n}\r\n","import {usersApi} from \"../api/users-api\"\r\nimport {AppThunkType} from \"./redux-store\";\r\n\r\nconst SET_USERS = 'USERS/SET_USERS'\r\nconst REMOVE_USER = 'USERS/REMOVE_USER'\r\n\r\nexport type UsersActionType = SetUsers | removeUsers\r\ntype SetUsers = ReturnType<typeof setUsers>\r\ntype removeUsers = ReturnType<typeof removeUser>\r\n\r\ntype UsersType = {\r\n    users: Array<UserType>\r\n}\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    username: string\r\n    email: string\r\n    address: AddressType\r\n    phone: string\r\n    website: string\r\n    company: CompanyType\r\n}\r\nexport type AddressType = {\r\n    street: string\r\n    suite: string\r\n    city: string\r\n    zipcode: string\r\n    geo: GeoType\r\n}\r\nexport type GeoType = {\r\n    lat: string\r\n    lng: string\r\n}\r\nexport type CompanyType = {\r\n    name: string\r\n    catchPhrase: string\r\n    bs: string\r\n}\r\n\r\nconst initialState = {\r\n    users: []\r\n}\r\n\r\nexport const usersReducer = (state: UsersType = initialState, action: UsersActionType): UsersType => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case REMOVE_USER:\r\n            return {\r\n                ...state,\r\n                users: [...state.users].filter((user) => user.id !== action.payload.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// action creators\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {type: SET_USERS, payload: {users}} as const\r\n}\r\nexport const removeUser = (userId: number) => {\r\n    return {type: REMOVE_USER, payload: {userId}} as const\r\n}\r\n//THUNK\r\nexport const getUsers = (): AppThunkType => async dispatch => {\r\n    const res = await usersApi.getUsers()\r\n    const users = res.data\r\n    dispatch(setUsers(users))\r\n}\r\n","import React from \"react\"\r\nimport \"./Modal.css\"\r\nimport {AddressType, CompanyType} from \"../../redux/users-reducer\";\r\n\r\ntype PropsType = {\r\n    active: boolean\r\n    setActive: (active: boolean) => void\r\n    address: AddressType\r\n    company: CompanyType\r\n}\r\n\r\nexport const Modal: React.FC<PropsType> = (props) => {\r\n    const {active, setActive, address, company} = props\r\n\r\n    return (\r\n        <div className={active ? \"modal active\" : \"modal\"} onClick={() => setActive(false)}>\r\n            <div className={active ? \"modal_content active\" : \"modal_content\"}\r\n                 onClick={(e) => e.stopPropagation()}>\r\n                <div className=\"line\">\r\n                    Address\r\n                </div>\r\n                <div>\r\n                    <span>Street: </span>{address.street}\r\n                </div>\r\n                <div>\r\n                    <span>Suite: </span>{address.suite}\r\n                </div>\r\n                <div>\r\n                    <span>City: </span>{address.city}\r\n                </div>\r\n                <div>\r\n                    <span>Zipcode: </span>{address.zipcode}\r\n                </div>\r\n                <div className=\"line\">\r\n                    Company\r\n                </div>\r\n                <div>\r\n                    <span>Name: </span>{company.name}\r\n                </div>\r\n                <div>\r\n                    <span>Bs: </span>{company.bs}\r\n                </div>\r\n                <div>\r\n                    <span>Catch phrase: </span>{company.catchPhrase}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\"\r\nimport {removeUser, UserType} from \"../../redux/users-reducer\";\r\nimport \"./User.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Modal} from \"../modal/Modal\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    arrSearchName?: Array<Array<number>>\r\n    arrSearchUsername?: Array<Array<number>>\r\n    arrSearchEmail?: Array<Array<number>>\r\n    setInputText?: (text: string) => void\r\n    setSearchUsers?: (users: Array<{}>) => void\r\n}\r\n\r\nexport const User: React.FC<PropsType> = (props) => {\r\n    const {user, arrSearchName, arrSearchUsername, arrSearchEmail, setInputText, setSearchUsers} = props\r\n\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const remove = () => {\r\n        dispatch(removeUser(user.id))\r\n        if (setInputText !== undefined)\r\n            setInputText('')\r\n        if (setSearchUsers !== undefined)\r\n            setSearchUsers([])\r\n    }\r\n\r\n    let name = user.name\r\n    let startName: string = ''\r\n    let searchNameSymbols: string = ''\r\n    let endName: string = ''\r\n\r\n    if (arrSearchName) {\r\n        startName = name.slice(0, arrSearchName[0][0])\r\n        searchNameSymbols = name.slice(arrSearchName[0][0], arrSearchName[0][0] + arrSearchName[0][1])\r\n        endName = name.slice(arrSearchName[0][0] + arrSearchName[0][1])\r\n    }\r\n\r\n    let username = user.username\r\n    let startUsername: string = ''\r\n    let searchUsernameSymbols: string = ''\r\n    let endUsername: string = ''\r\n\r\n    if (arrSearchUsername) {\r\n        startUsername = username.slice(0, arrSearchUsername[0][0])\r\n        searchUsernameSymbols = username.slice(arrSearchUsername[0][0], arrSearchUsername[0][0] + arrSearchUsername[0][1])\r\n        endUsername = username.slice(arrSearchUsername[0][0] + arrSearchUsername[0][1])\r\n    }\r\n\r\n    let userEmail = user.email\r\n    let startEmail: string = ''\r\n    let searchEmailSymbols: string = ''\r\n    let endEmail: string = ''\r\n\r\n    if (arrSearchEmail) {\r\n        startEmail = userEmail.slice(0, arrSearchEmail[0][0])\r\n        searchEmailSymbols = userEmail.slice(arrSearchEmail[0][0], arrSearchEmail[0][0] + arrSearchEmail[0][1])\r\n        endEmail = userEmail.slice(arrSearchEmail[0][0] + arrSearchEmail[0][1])\r\n    }\r\n\r\n    return (\r\n        <div className=\"user\">\r\n            <div onClick={() => setModalActive(true)}>\r\n                {arrSearchName !== undefined ?\r\n                    <div>\r\n                        <span>name: </span>\r\n                        {`${startName}`}<label>{`${searchNameSymbols}`}</label>{`${endName}`}\r\n                    </div>\r\n                    : <div>\r\n                        <span>name: </span>{user.name}\r\n                    </div>\r\n                }\r\n                {arrSearchUsername !== undefined ?\r\n                    <div>\r\n                        <span>username: </span>\r\n                        {`${startUsername}`}<label>{`${searchUsernameSymbols}`}</label>{`${endUsername}`}\r\n                    </div>\r\n                    : <div>\r\n                        <span>username: </span>{user.username}\r\n                    </div>\r\n                }\r\n                {arrSearchEmail !== undefined ?\r\n                    <div>\r\n                        <span>email: </span>\r\n                        {`${startEmail}`}<label>{`${searchEmailSymbols}`}</label>{`${endEmail}`}\r\n                    </div>\r\n                    : <div>\r\n                        <span>email: </span>{user.email}\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button onClick={remove}>delete</button>\r\n            <Modal active={modalActive} setActive={setModalActive} address={user.address} company={user.company}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport \"./Search.css\"\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {User} from \"../user/User\";\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    inputText: string | number | readonly string[] | undefined\r\n    setInputText: (text: string) => void\r\n    setSearchUsers: (searchUsers: Array<{}>) => void\r\n    setNotFound: (notFound: boolean) => void\r\n}\r\n\r\nexport const Search: React.FC<PropsType> = (props) => {\r\n    const {users, setSearchUsers, setNotFound, inputText, setInputText} = props\r\n\r\n    let arrUsers: Array<{}> = []\r\n\r\n    const search = (value: string) => {\r\n\r\n        users.map((user) => {\r\n            let regexp = new RegExp(`${value}`, 'ig')\r\n            let isName = false\r\n            let isUsername = false\r\n            let isEmail = false\r\n            let arrSearchName = []\r\n            let arrSearchUsername = []\r\n            let arrSearchEmail = []\r\n\r\n            let result;\r\n            while (result = regexp.exec(user.name)) {\r\n                arrSearchName.push([result.index, result[0].length])\r\n                isName = true\r\n            }\r\n            while (result = regexp.exec(user.username)) {\r\n                arrSearchUsername.push([result.index, result[0].length])\r\n                isUsername = true\r\n            }\r\n            while (result = regexp.exec(user.email)) {\r\n                arrSearchEmail.push([result.index, result[0].length])\r\n                isEmail = true\r\n            }\r\n            if (isName || isUsername || isEmail) {\r\n                arrUsers.push(<User user={user} arrSearchName={arrSearchName.length !== 0 ? arrSearchName : undefined}\r\n                                    arrSearchUsername={arrSearchUsername.length !== 0 ? arrSearchUsername : undefined}\r\n                                    arrSearchEmail={arrSearchEmail.length !== 0 ? arrSearchEmail : undefined}\r\n                                    setInputText={setInputText}\r\n                                    setSearchUsers={setSearchUsers}\r\n                />)\r\n            }\r\n        })\r\n        if(arrUsers.length === 0) {\r\n            setNotFound(true)\r\n        } else {\r\n            setSearchUsers(arrUsers)\r\n            setNotFound(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <input type={'text'} placeholder={'search...'} value={inputText} onChange={(e) => {\r\n                setInputText(e.currentTarget.value)\r\n                if (e.currentTarget.value !== '') {\r\n                    search(e.currentTarget.value)\r\n                } else setSearchUsers([])\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getUsers, UserType} from \"./redux/users-reducer\";\nimport {AppRootStateType} from \"./redux/redux-store\";\nimport {User} from \"./components/user/User\";\nimport {Search} from \"./components/search/Search\";\n\nexport const App: React.FC = () => {\n\n    const dispatch = useDispatch()\n    const users = useSelector<AppRootStateType, Array<UserType>>((state) => state.users.users)\n    const [searchUsers, setSearchUsers] = useState<Array<{}>>([])\n    const [inputText, setInputText] = useState<string | number | readonly string[] | undefined>(undefined)\n    const [notFound, setNotFound] = useState<boolean>(false)\n\n    useEffect(() => {\n        dispatch(getUsers())\n    }, [])\n\n    const reset = () => {\n        dispatch(getUsers())\n        setSearchUsers([])\n        setInputText('')\n        setNotFound(false)\n    }\n\n    return (\n        <div className=\"app\">\n            <div className=\"searchBlock\">\n                <button children={'reset'} onClick={reset}/>\n                <Search users={users}\n                        setSearchUsers={setSearchUsers}\n                        setNotFound={setNotFound}\n                        inputText={inputText}\n                        setInputText={setInputText}\n                />\n            </div>\n            {!notFound ?\n                <div className=\"usersBlock\">\n                    {searchUsers.length === 0 ?\n                        users.map((user) => {\n                            return <User user={user}/>\n                        })\n                        : searchUsers.map((user) => {\n                            return user\n                        })\n                    }\n                </div>\n                : <div className=\"not_found\">Users not found</div>\n            }\n        </div>\n    );\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    users: usersReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionsType = UsersActionType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport { store } from './redux/redux-store';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}